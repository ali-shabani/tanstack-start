/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MoviesImport } from './routes/movies'
import { Route as IndexImport } from './routes/index'
import { Route as RickAndMortyCharactersImport } from './routes/rick-and-morty/characters'
import { Route as MoviesIdImport } from './routes/movies_/$id'
import { Route as RickAndMortyCharactersIdImport } from './routes/rick-and-morty/characters_.$id'

// Create/Update Routes

const MoviesRoute = MoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RickAndMortyCharactersRoute = RickAndMortyCharactersImport.update({
  id: '/rick-and-morty/characters',
  path: '/rick-and-morty/characters',
  getParentRoute: () => rootRoute,
} as any)

const MoviesIdRoute = MoviesIdImport.update({
  id: '/movies_/$id',
  path: '/movies/$id',
  getParentRoute: () => rootRoute,
} as any)

const RickAndMortyCharactersIdRoute = RickAndMortyCharactersIdImport.update({
  id: '/rick-and-morty/characters_/$id',
  path: '/rick-and-morty/characters/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesImport
      parentRoute: typeof rootRoute
    }
    '/movies_/$id': {
      id: '/movies_/$id'
      path: '/movies/$id'
      fullPath: '/movies/$id'
      preLoaderRoute: typeof MoviesIdImport
      parentRoute: typeof rootRoute
    }
    '/rick-and-morty/characters': {
      id: '/rick-and-morty/characters'
      path: '/rick-and-morty/characters'
      fullPath: '/rick-and-morty/characters'
      preLoaderRoute: typeof RickAndMortyCharactersImport
      parentRoute: typeof rootRoute
    }
    '/rick-and-morty/characters_/$id': {
      id: '/rick-and-morty/characters_/$id'
      path: '/rick-and-morty/characters/$id'
      fullPath: '/rick-and-morty/characters/$id'
      preLoaderRoute: typeof RickAndMortyCharactersIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies/$id': typeof MoviesIdRoute
  '/rick-and-morty/characters': typeof RickAndMortyCharactersRoute
  '/rick-and-morty/characters/$id': typeof RickAndMortyCharactersIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies/$id': typeof MoviesIdRoute
  '/rick-and-morty/characters': typeof RickAndMortyCharactersRoute
  '/rick-and-morty/characters/$id': typeof RickAndMortyCharactersIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies_/$id': typeof MoviesIdRoute
  '/rick-and-morty/characters': typeof RickAndMortyCharactersRoute
  '/rick-and-morty/characters_/$id': typeof RickAndMortyCharactersIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/movies'
    | '/movies/$id'
    | '/rick-and-morty/characters'
    | '/rick-and-morty/characters/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/movies'
    | '/movies/$id'
    | '/rick-and-morty/characters'
    | '/rick-and-morty/characters/$id'
  id:
    | '__root__'
    | '/'
    | '/movies'
    | '/movies_/$id'
    | '/rick-and-morty/characters'
    | '/rick-and-morty/characters_/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MoviesRoute: typeof MoviesRoute
  MoviesIdRoute: typeof MoviesIdRoute
  RickAndMortyCharactersRoute: typeof RickAndMortyCharactersRoute
  RickAndMortyCharactersIdRoute: typeof RickAndMortyCharactersIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MoviesRoute: MoviesRoute,
  MoviesIdRoute: MoviesIdRoute,
  RickAndMortyCharactersRoute: RickAndMortyCharactersRoute,
  RickAndMortyCharactersIdRoute: RickAndMortyCharactersIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/movies",
        "/movies_/$id",
        "/rick-and-morty/characters",
        "/rick-and-morty/characters_/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/movies": {
      "filePath": "movies.tsx"
    },
    "/movies_/$id": {
      "filePath": "movies_/$id.tsx"
    },
    "/rick-and-morty/characters": {
      "filePath": "rick-and-morty/characters.tsx"
    },
    "/rick-and-morty/characters_/$id": {
      "filePath": "rick-and-morty/characters_.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
